name: Build Docker Images

env:
  DOCKERHUB_TAG: "matrix37/hyperion"
  DOCKERHUB_SHORT_DESCRIPTION: "Docker Container for Hyperion.ng"
  DOCKERHUB_README_FILE: "README.md"

on:
  push:
  schedule:
    - cron: " 0 7 2 * *"
  workflow_dispatch:

jobs:
  main:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release_type: [ 'stable', 'nightly' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set cache buster
        id: cache_buster
        run: |
          if [ '${{ github.event_name }}' == 'schedule' ]
          then
            echo "Scheduled run. Disable cache."
            echo "suffix=-no-cache" >> $GITHUB_OUTPUT
          else
            echo "Non-scheduled run. Enable cache."
            echo "suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Get branche name
        uses: nelonoel/branch-name@v1.0.1

      - name: Set Docker Tags
        id: docker_tags
        run: |
          TAG=""

          # Add tag develop if needed
          if [ ${BRANCH_NAME} == 'develop' ]
          then
            TAG=(${{ env.DOCKERHUB_TAG }}:develop)
          else
            # Tag with "nightly"
            if [ '${{ matrix.release_type }}' == 'nightly' ]
            then
              TAG=(${{ env.DOCKERHUB_TAG }}:nightly)
            else
              TAG=(${{ env.DOCKERHUB_TAG }}:latest)
            fi
          fi

          echo "Image tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          build-args: |
            RELEASE_TYPE=${{ matrix.release_type }}
          push: true
          tags: ${{ steps.docker_tags.outputs.tag }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          cache-from: type=registry,ref=${{ steps.docker_tags.outputs.tag }}${{ steps.cache_buster.outputs.suffix }}
          cache-to: type=inline

      - name: Image digests
        run: |
          echo Release type: ${{ matrix.release_type }}; \
          echo Image Tag: ${{ steps.docker_tags.outputs.tag }}; \
          echo Branche: ${BRANCH_NAME}; \
          echo Digests: ${{ steps.docker_build.outputs.digest }}

  pushreadme:
    runs-on: ubuntu-latest
    name: Push README to Docker Hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_HUB_PASSWORD }}
        with:
          destination_container_repo: ${{ env.DOCKERHUB_TAG }}
          provider: dockerhub
          short_description: ${{ env.DOCKERHUB_SHORT_DESCRIPTION }}
          readme_file: ${{ env.DOCKERHUB_README_FILE }}
